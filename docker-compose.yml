services:

  redis:
    image: redis:latest
    container_name: bluppi-redis
    networks:
      - cloudflared
  api:
    build: .
    container_name: bluppi-api
    command: ["uv", "run", "uvicorn", "app.server:app", "--reload", "--host", "0.0.0.0", "--port", "8000"]
    volumes:
      - ./app:/workspace/app
    environment:
      DB_HOST: host.docker.internal
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      CHAT_DB_NAME: ${CHAT_DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      WS_HOST: host.docker.internal
      WS_PORT: ${WS_PORT}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - cloudflared

  ws1:
    build: .
    container_name: bluppi-ws1
    command: ["uv", "run", "uvicorn", "chat.server:app", "--reload", "--host", "0.0.0.0", "--port", "8080"]
    volumes:
      - ./chat:/workspace/chat
    environment:
      DB_HOST: host.docker.internal
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      CHAT_DB_NAME: ${CHAT_DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      WS_HOST: host.docker.internal
      WS_PORT: ${WS_PORT}
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - cloudflared


  tunnel:
    container_name: bluppi-tunnel
    image: cloudflare/cloudflared:latest
    command: tunnel --protocol http2 run
    restart: unless-stopped
    networks:
      - cloudflared
    depends_on:
      - api
      - ws1
    environment:
      TUNNEL_TOKEN: ${TUNNEL_TOKEN}

networks:
  cloudflared:
    name: cloudflared