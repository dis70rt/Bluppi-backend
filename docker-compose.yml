services:

  postgres:
    image: postgres:16
    container_name: bluppi-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      CHAT_DB_NAME: ${CHAT_DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks:
      - cloudflared

  redis:
    image: redis:7-alpine
    container_name: bluppi-redis
    networks:
      - cloudflared
    ports:
      - "${REDIS_PORT}:6379"
  api:
    build: .
    container_name: bluppi-api
    command: [
      ".venv/bin/uvicorn",
      "app.server:app",
      "--host", "0.0.0.0",
      "--port", "8000"
    ]
    volumes:
      - ./app:/workspace/app
    environment:
      DB_HOST: postgres
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      CHAT_DB_NAME: ${CHAT_DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      WS_HOST: postgres
      WS_PORT: ${WS_PORT}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
    networks:
      - cloudflared

  ws1:
    build: .
    container_name: bluppi-ws1
    command: [
      ".venv/bin/uvicorn",
      "chat.server:app",
      "--host", "0.0.0.0",
      "--port", "8080"
    ]
    volumes:
      - ./chat:/workspace/chat
    environment:
      DB_HOST: postgres
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      CHAT_DB_NAME: ${CHAT_DB_NAME}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      WS_HOST: postgres
      WS_PORT: ${WS_PORT}
    networks:
      - cloudflared
  grpc:
    build: .
    container_name: bluppi-grpc
    command: [".venv/bin/python3.12", "party/server.py"]
    environment:
      CERTS_PATH: /workspace/certs
      DB_HOST: postgres
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_DB}
      GRPC_HOST: postgres
      GRPC_PORT: ${GRPC_PORT}
    volumes:
      - ./party:/workspace/party
    networks:
      - cloudflared

  mqtt:
    container_name: mosquitto
    image: eclipse-mosquitto
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
      - ./mosquitto/config/passwd:/mosquitto/config/passwd:ro
      - ./mosquitto/logs:/mosquitto/logs
      - ./mosquitto/data:/mosquitto/data

    restart: unless-stopped
    ports:
      - "1883:1883"
      - "9001:9001"
    networks:
      - cloudflared

  tunnel:
    container_name: bluppi-tunnel
    image: cloudflare/cloudflared:latest
    command: tunnel --protocol http2 run
    restart: unless-stopped
    networks:
      - cloudflared
    depends_on:
      - api
      - ws1
      - mqtt
    environment:
      TUNNEL_TOKEN: ${TUNNEL_TOKEN}
  
  nginx:
    image: nginx:1.25-alpine
    container_name: bluppi-nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./certs:/etc/nginx/certs
    ports:
      - "443:443"
    networks:
      - cloudflared
    depends_on:
      - grpc

networks:
  cloudflared:
    name: cloudflared

volumes:
  pg_data: