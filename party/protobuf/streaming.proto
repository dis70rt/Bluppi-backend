syntax = "proto3";
package ListeningParty;

import "protobuf/track.proto";
import "protobuf/common.proto";

message SyncMeasurement {
  int64 client_timestamp_ms = 1;      
  int64 server_receive_ms = 2;        
  int64 server_send_ms = 3;           
  int64 client_receive_ms = 4;        
  string client_id = 5;               
}

message SyncResponse {
  int64 server_timestamp_ms = 1;      
  float recommended_adjustment = 2;   
  int32 estimated_offset_ms = 3;      
}

message PlaybackCommand {
  enum CommandType {
    PLAY = 0;
    PAUSE = 1;
    SEEK = 2;
    TRACK_CHANGE = 3;
    ADJUST_RATE = 4;
  }
  
  CommandType type = 1;
  int64 server_timestamp_ms = 2;      
  int64 position_ms = 3;              
  Track track = 4;                    
  float playback_rate = 5;            
}

message ClientState {
  int64 client_timestamp_ms = 1;
  int64 playback_position_ms = 2;
  string current_track_id = 3;
  PlaybackStatus status = 4;
  float current_playback_rate = 5;
  int32 buffer_health_ms = 6;         
}

service SyncService {
  rpc MeasureTiming(SyncMeasurement) returns (SyncResponse);  
  rpc BidirectionalSync(stream ClientState) returns (stream PlaybackCommand);
}